<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>移动平台的meta标签---神奇的功效</title>
      <link href="/2019/03/21/%E7%A7%BB%E5%8A%A8%E5%B9%B3%E5%8F%B0%E7%9A%84meta%E6%A0%87%E7%AD%BE-%E7%A5%9E%E5%A5%87%E7%9A%84%E5%8A%9F%E6%95%88/"/>
      <content type="html"><![CDATA[<h1 id="移动平台的-meta-标签"><a href="#移动平台的-meta-标签" class="headerlink" title="移动平台的 meta 标签"></a>移动平台的 meta 标签</h1><blockquote><p>对于桌面平台web布局中，对 meta 标签再熟悉不过了，它永远位于 head 元素内部，meta 有种特殊的感情，今天我们就来说说移动平台的meta标签，在移动平台meta标签究竟有哪些神奇的功效呢？</p></blockquote><a id="more"></a><h2 id="Meta-之-viewport"><a href="#Meta-之-viewport" class="headerlink" title="Meta 之 viewport"></a>Meta 之 viewport</h2><p>说到移动平台的 meta 标签，那就不得不说一下 viewport 了，那么什么是viewport呢？<br>viewport 即可视区域，对于桌面浏览器而言，viewport 指的就是除了所有工具栏、状态栏、滚动条等等之后用于看网页的区域。对于传统 WEB 页面来说，980 的宽度在 iphone 上显示是很正常的，也是满屏的，但对于 web app 而言，可能就有点问题了，在 iphone 上我们的webapp 在竖屏下通常宽度都是320， 这时我们320 页面在 iphone 上显示成啥效果呢？有人可能认为 iphone 不是320的宽度么，感觉应该是满屏的吧，事实呢？我们来看一下如下布局在 iphone 上的显示情况。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"ch-ZN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">chartset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Meta Viewport<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        div,body &#123;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        body &#123;</span></span><br><span class="line"><span class="undefined">            padding-top: 100px;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        div &#123;</span></span><br><span class="line"><span class="undefined">            width: 320px;</span></span><br><span class="line"><span class="undefined">            height: 100px;</span></span><br><span class="line"><span class="undefined">            margin: 0 auto;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#000</span>;</span></span><br><span class="line"><span class="undefined">            text-align: center;</span></span><br><span class="line"><span class="undefined">            font: 30px/100px Arial;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>App UE<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>因此我们必须改变 viewpor, 我们就有如下几种属性值可以设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">width: viewport 的宽度 （范围从 200 到 10,000 , 默认为 980 像素）</span><br><span class="line">height: viewport 的高度 （范围从 223 到 10,000 ）</span><br><span class="line">initial-scale: 初始的缩放比例 （范围从 &gt; 0 到 10 ）</span><br><span class="line">minimum-scale: 允许用户缩放到的最小比例</span><br><span class="line">maximum-scale: 允许用户缩放到的最大比例</span><br><span class="line">user-scalable: 用户是否可以手动缩放</span><br></pre></td></tr></table></figure><p>对于这些属性，我们可以设置其中的一个或者多个，并不需要你同时都设置， iPhone 会根据你设置的属性自动推算其他属性，而非直接采用默认值。</p><p>如果你把 initial-scale=1, 那么 width 和 height 在竖屏时自动为 320<em>356（320</em>480 因为地址栏等都占据空间），横屏时自动为480*208。类似地，如果你仅仅设置 width, 就会自动推算出 initial-scale 以及 height。例如你设置了 width=320, 竖屏时 initial-scale 就是 1，横屏时则变成 1.5 了。那么到底这些设置如何让 Safari 知道？<br>其实很简单，就一个 meta, 形如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scable=0;"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Meta-之-format-detection"><a href="#Meta-之-format-detection" class="headerlink" title="Meta 之 format-detection"></a>Meta 之 format-detection</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"format-detection"</span> <span class="attr">content</span>=<span class="string">"telephone=no"</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>你明明写的一串数字没加链接样式，而 iPhone 会自动把这串文字加链接样式、并且点击这个数字还会自动拨号！</code><br>想去掉这个拨号链接该如何操作呢？这时我们的meta又该大显神通了，代码如下：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 就禁止了把数字转化为拨号链接！ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"format-detection"</span> <span class="attr">content</span>=<span class="string">"telephone=no"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 开启把数字转化为拨号连接，要开启转化功能，这个 meta 就不用写了，在默认的是情况下就是开启！ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"format-dectection"</span> <span class="attr">content</span>=<span class="string">"telephone=yes"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Meta-之-apple-mobile-web-app-capable"><a href="#Meta-之-apple-mobile-web-app-capable" class="headerlink" title="Meta 之 apple-mobile-web-app-capable"></a>Meta 之 apple-mobile-web-app-capable</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-capable"</span> <span class="attr">content</span>=<span class="string">"yes"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这 meta 的作用就是删除默认的苹果工具栏和菜单栏。content 有两个值 <code>yes</code> 和 <code>no</code>, 当我们需要显示工具栏和菜单栏时，这行 <code>meta</code> 就不用加了，默认就是显示。</p><p>加了该 meta 的情况</p><h2 id="Meta-之-apple-mobile-web-app-status-bar-style"><a href="#Meta-之-apple-mobile-web-app-status-bar-style" class="headerlink" title="Meta 之 apple-mobile-web-app-status-bar-style"></a>Meta 之 apple-mobile-web-app-status-bar-style</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-status-bar-style"</span> <span class="attr">content</span>=<span class="string">"default"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-status-bar-style"</span> <span class="attr">content</span>=<span class="string">"black"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-status-bar-style"</span> <span class="attr">content</span>=<span class="string">"black-translucent"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>作用是控制状态显示样式:<br><code>status-bar-style:black</code></p><p><code>status-bar-style: black-translucent</code></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>CSS使用技巧（一）</title>
      <link href="/2019/03/18/CSS%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <content type="html"><![CDATA[<h1 id="CSS使用技巧（一）"><a href="#CSS使用技巧（一）" class="headerlink" title="CSS使用技巧（一）"></a>CSS使用技巧（一）</h1><ol><li>使用 CSS 复位</li></ol><p>CSS 重置帮助用干净的石板为造型元素在不同的浏览器风格的一致性。可以使用CSS复位库像 Normalize 等。也可以使用一个更简化的复位方法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在的元素将被剥离利用率和<code>box-sizing</code>, 您可以管理与CSS盒模型布局。</p><blockquote><p>注意：如果按照继承 <code>box-sizing</code> 下面你可能会选择不包含在你的 CSS 复位 box-sizing 财产。</p></blockquote><a id="more"></a><hr><ol start="2"><li>继承box-sizing</li></ol><p>从 html 元素继承 <code>box-sizing</code> 就好：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line">*,</span><br><span class="line">*<span class="selector-pseudo">:before</span>,</span><br><span class="line">*<span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: inherit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如此在插件或其它组件里改变 <code>box-sizing</code> 变得简单。</p><hr><ol start="3"><li>使用 <code>:not</code> 选择器来决定表单是否显示边框</li></ol><p>与其加上边框</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 添加边框 */</span></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="number">#666</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 去掉边框 */</span></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">li</span><span class="selector-pseudo">:not(</span><span class="selector-pseudo">:last-child)</span> &#123;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="number">#666</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然，也可以使用 <code>.nav li + li</code> 或者 <code>.nav li:first-child ~ li</code> 来达成，但是 <code>:not</code> 选择器的方式更清晰明了，一目了然。</p><hr><ol start="4"><li>为body 元素添加行高</li></ol><p>不必为每一个 <code>&lt;p&gt;,&lt;h*&gt;</code> 等元素逐一添加 <code>line-height</code>, 为 <code>body</code> 元素添加就好了:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文本元素可以很自然地继承 <code>body</code> 的样式。</p><hr><ol start="5"><li>垂直居中任何元素</li></ol><p>这不是黑魔法，真的可以垂直居中任何元素：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>, <span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-align-items</span>: center;</span><br><span class="line">    <span class="attribute">-ms-flex-align</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">display</span>: -webkit-flex;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>tips: IE11 对 flexbox 的支持有点 bug。</p></blockquote><hr><ol start="6"><li>逗号分隔的列表</li></ol><p>列表的每项都由逗号分隔：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:not(</span><span class="selector-pseudo">:last-child)</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">","</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用了 <code>:not</code> 伪类，因此最后一项没加逗号。</p><blockquote><p>tips：这一技巧对于无障碍，屏幕阅读器而言并不理想，需要注意。</p></blockquote><hr><ol start="7"><li>使用负的 <code>nth-child</code> 来选择元素</li></ol><p>使用负的 <code>nth-child</code> 可以选择 1 至 n 个元素。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 选择第 1 至 第 3 个元素并显示出来 */</span></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(-n+3)</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或许你已经掌握了如何使用 <code>:not</code>, 试下这个：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:not(</span><span class="selector-pseudo">:nth-child(-n+3))</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就这么简单。</p><hr><ol start="8"><li>使用 SVG 图标</li></ol><p>没有理由不使用 SVG 图标：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.logo</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">"logo.svg"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SVG 在所有分辨率下都可以良好缩放， IE9+ 及其它所有浏览器都支持，丢掉你的 <code>.png, .jpg, 或 .git-jif-whatev</code> 文件吧。</p><blockquote><p>tips: 针对仅有图标的按钮，如果 SVG 没有加载成功的话，以下样式对无障碍有所帮助：</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.no-svg</span> <span class="selector-class">.icon-only</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="built_in">attr</span>(aria-label);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><ol start="9"><li>使用 “形似猫头鹰” 的选择器</li></ol><p>这个名字可能比较陌生，不过全局选择器（*）和相邻选择器（+）一起使用，效果非凡：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*+* &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">1.5em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在此示例中，遵循其他元素的文档流中的所有元素将都接收上边距 <code>margin-top: 1.5em</code> 的样式。</p><p>更多 “形似猫头鹰” 的选择器，可参加 A List Apart 上面 Heydon Picking 的文章。</p><ol start="10"><li>使用 max-height 来建立纯 CSS 的滑块</li></ol><p><code>max-heigth</code> 与 <code>overflow: hidden</code> 一起来建立纯 CSS的滑块：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.slider</span> &#123;</span><br><span class="line">    <span class="attribute">max-height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">overflow-y</span>: hidden;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.slider</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">max-height</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">overflow-y</span>: scroll;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>移入滑块元素时增大它的 <code>max-height</code> 的值，便可以显示溢出部分。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Web 前端面试题</title>
      <link href="/2019/01/25/Web-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
      <content type="html"><![CDATA[<h1 id="Web-前端面试题"><a href="#Web-前端面试题" class="headerlink" title="Web 前端面试题"></a>Web 前端面试题</h1><h2 id="问：obj-的值会改变吗？"><a href="#问：obj-的值会改变吗？" class="headerlink" title="问：obj 的值会改变吗？"></a>问：obj 的值会改变吗？</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123; <span class="attr">a</span>: <span class="number">1</span> &#125;;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">  obj = &#123; <span class="attr">a</span>: <span class="number">2</span> &#125;;</span><br><span class="line">&#125;)(obj);</span><br></pre></td></tr></table></figure><p><code>外部的 obj 不会</code></p><p>因为匿名函数钟 obj 传入参数等于是创建了一个局部变量 obj, 里面的 obj 指向了一个新的对象，如果改成 如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  obj = &#123; <span class="attr">a</span>: <span class="number">2</span> &#125;;</span><br><span class="line">&#125;)(obj);</span><br></pre></td></tr></table></figure><p>这样 obj 值就会变了</p><hr><a id="more"></a><h2 id="匿名函数里的-thi-指向的是什么？"><a href="#匿名函数里的-thi-指向的是什么？" class="headerlink" title="匿名函数里的 thi 指向的是什么？"></a>匿名函数里的 thi 指向的是什么？</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  a: <span class="number">1</span>,</span><br><span class="line">  func: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      a = <span class="number">2</span>;</span><br><span class="line">    &#125;)();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">obj.func();</span><br><span class="line"><span class="comment">// obj 中 a 的值会改变吗？匿名函数里的 this 指向什么？</span></span><br></pre></td></tr></table></figure><p>obj 里的 a 不会改变，匿名函数里的 this 指向全局对象 window. 这等于是给 window 加了一个名为 a 的属性，要改变 obj 中 a 的值，应当：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.a = <span class="number">2</span>;</span><br><span class="line">&#125;.call(<span class="keyword">this</span>));</span><br><span class="line"><span class="comment">// 或者 obj 中定义</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  a: <span class="number">1</span>,</span><br><span class="line">  func: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      self.a = <span class="number">2</span>;</span><br><span class="line">    &#125;)();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><h2 id="要实现函数内每隔-5-秒调用自己这个函数，-100-次以后停止，怎么办？"><a href="#要实现函数内每隔-5-秒调用自己这个函数，-100-次以后停止，怎么办？" class="headerlink" title="要实现函数内每隔 5 秒调用自己这个函数， 100 次以后停止，怎么办？"></a>要实现函数内每隔 5 秒调用自己这个函数， 100 次以后停止，怎么办？</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> index = <span class="number">0</span>;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (index &lt; <span class="number">100</span>) &#123;</span><br><span class="line">      index++;</span><br><span class="line">      setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        fn();</span><br><span class="line">      &#125;, <span class="number">5000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  fn();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><hr><h2 id="点击一个-ul-的五个-li-元素，分别弹出他们的序号，怎么做？"><a href="#点击一个-ul-的五个-li-元素，分别弹出他们的序号，怎么做？" class="headerlink" title="点击一个 ul 的五个 li 元素，分别弹出他们的序号，怎么做？"></a>点击一个 <code>ul</code> 的五个 <code>li</code> 元素，分别弹出他们的序号，怎么做？</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方法 1</span></span><br><span class="line"><span class="keyword">var</span> oLi = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"li"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; oLi.length; i++) &#123;</span><br><span class="line">  oLi[i].onclick = (<span class="function"><span class="keyword">function</span>(<span class="params">j</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      alert(j);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;)(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 方法2</span></span><br><span class="line"><span class="keyword">var</span> oLis = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"li"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; oLis.lenght; i++) &#123;</span><br><span class="line">  (<span class="function"><span class="keyword">function</span>(<span class="params">j</span>) </span>&#123;</span><br><span class="line">    oLi[j].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      alert(j);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;)(i);</span><br><span class="line">&#125;</span><br><span class="line">方法<span class="number">3</span>;</span><br><span class="line"><span class="keyword">var</span> oLis = <span class="built_in">document</span>.getElementByTagName(<span class="string">"li"</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; oLis.length; i++) &#123;</span><br><span class="line">  oLis[i].index = i;</span><br><span class="line">  oLis[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="keyword">this</span>.index);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="js-实现数组去重怎么实现？"><a href="#js-实现数组去重怎么实现？" class="headerlink" title="js 实现数组去重怎么实现？"></a>js 实现数组去重怎么实现？</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方法 1：创建一个新的临时数组来保存数组中已有的元素</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">3</span>);</span><br><span class="line"><span class="built_in">Array</span>.prototype.unique1 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> n = []; <span class="comment">// 一个新的临时数组</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++) &#123;</span><br><span class="line">    <span class="comment">// 如果把当前数组的第 i 已经保存进了临时数组，那么跳过</span></span><br><span class="line">    <span class="keyword">if</span> (n.indexOf(<span class="keyword">this</span>[i]) == <span class="number">-1</span>) &#123;</span><br><span class="line">      n.push(<span class="keyword">this</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> n;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(a.unique1());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法2： 使用哈希表存储已有的元素</span></span><br><span class="line"><span class="built_in">Array</span>.prototype.unique2 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> hash = &#123;&#125;;</span><br><span class="line">  n = []; <span class="comment">// hash 作为哈希表，n 作为临时数组</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!hash[<span class="keyword">this</span>[i]]) &#123;</span><br><span class="line">      <span class="comment">// 如果 hash 表中没有当前项</span></span><br><span class="line">      hash[<span class="keyword">this</span>[i]] = <span class="literal">true</span>; <span class="comment">// 存入 hash 表</span></span><br><span class="line">      n.push(<span class="keyword">this</span>[i]); <span class="comment">// 当前元素 push 到临时数组中</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> n;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法3：使用 indexOf 判断数组元素第一次出现的位置是否为当前位置</span></span><br><span class="line"><span class="built_in">Array</span>.prototype.unique3 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> n = [<span class="keyword">this</span>[<span class="number">0</span>]];</span><br><span class="line">    <span class="comment">// 从第二项开始遍历</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;<span class="keyword">this</span>.length; i++) &#123;</span><br><span class="line">        <span class="comment">// 如果当前数组元素在数组中出现的第一次的位置不是 i</span></span><br><span class="line">        <span class="comment">// 说明是重复元素</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.indexOf(<span class="keyword">this</span>[i]) == i) &#123;</span><br><span class="line">            n.push(<span class="keyword">this</span>[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法4： 先排序再去重</span></span><br><span class="line"><span class="built_in">Array</span>.prototype.unique4 = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a = b;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> n = [<span class="keyword">this</span>[<span class="number">0</span>]];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i&lt; <span class="keyword">this</span>.length;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>[i] != <span class="keyword">this</span>[i<span class="number">-1</span>]) &#123;</span><br><span class="line">            n.push(<span class="keyword">this</span>[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一种方法和第三种方法都是用了 indexOf(),这个函数的执行机制也会遍历数组</p><p>第二种方法使用了一个哈希表，是最快的</p><p>第三种方法也有一个排序的复杂度的计算</p><p>然后做了个测试，随机生成 100 万个 0-1000 的数组结果如下：</p><p><code>方法一： 执行时间 240</code></p><p><code>方法二： 执行时间 5</code></p><p><code>方法三： 执行时间 477</code></p><p><code>方法四： 执行时间 246</code></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Sass中文乱码问题</title>
      <link href="/2019/01/02/Sass%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/"/>
      <content type="html"><![CDATA[<blockquote><p>在第一次使用 sass 预处理工具的时，身为小白，难免会遇到一些问题，比如最近一段时间我用 <code>sass</code>命令预编译时，就遇到了在 <em>.scss</em> 文件中写有中文注释，或者当写一个中文注释的时候，就会编译报错，找到了解决方案，分享出来。</p></blockquote><a id="more"></a><h1 id="Sass中文乱码问题"><a href="#Sass中文乱码问题" class="headerlink" title="Sass中文乱码问题"></a>Sass中文乱码问题</h1><h2 id="1-Sass手动编译出错"><a href="#1-Sass手动编译出错" class="headerlink" title="1. Sass手动编译出错"></a>1. Sass手动编译出错</h2><p>.scss文件中含有中文的时候编译报错（比如注释，字体栈），例如：</p><p><strong>global.scss:</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">charset</span> <span class="string">"utf-8"</span>;</span><br><span class="line"><span class="comment">/* 全局变量 */</span></span><br><span class="line"><span class="variable">$default-font</span>: <span class="string">"微软雅黑"</span>,<span class="string">"黑体"</span>;</span><br><span class="line"><span class="variable">$default-fontSize</span>: <span class="number">16px</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="variable">$default-fontSize</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="variable">$default-font</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译：</p><p><img src="https://images2015.cnblogs.com/blog/784924/201610/784924-20161010100830868-786548730.png" alt="image"></p><hr><p><strong>解决办法：</strong><br>找到类似以下路径的文件:</p><ul><li><p>windows 下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Ruby23-x64\lib\ruby\gems\2.3.0\gems\sass-3.4.25\lib\sass\engine.rb</span><br></pre></td></tr></table></figure><p>打开它，在所有的<code>reqiure</code>后面添加一句：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Encoding.default_external = Encoding.find(<span class="string">'utf-8'</span>)</span><br></pre></td></tr></table></figure><p><img src="assets/1546357713883.png" alt="1546357713883"></p></li></ul><p>这时加不加@charset无所谓，因为编译器编译的时候会给加上的，当然手动指定是个好习惯。</p><blockquote><p><strong>tips:</strong> 在编译时，一定不要使用中文路径</p></blockquote><hr><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><ol><li>sass 在编译时中文乱码报错：修改 C:\Ruby23-x64\lib\ruby\gems\2.3.0\gems\sass-3.4.25\lib\sass\engine.rb 的require 后加一句 <code>Encoding.default_external = Encoding.find(&#39;utf-8&#39;)</code></li><li><code>.scss</code>文件不允许存放在中文路径下。</li><li>常用的scss 编译监听  <code>sass --watch file.scss:file.css --style compressed</code><ol><li><code>--watch</code> 监听文件，并编译</li><li><code>--style</code> 编译的文件格式</li></ol></li></ol>]]></content>
      
      
        <tags>
            
            <tag> sass </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>快速上手org-mode</title>
      <link href="/2018/09/16/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8Borg-mode/"/>
      <content type="html"><![CDATA[]]></content>
      
      
    </entry>
    
    <entry>
      <title>使用SCSS的each和数组来快速解决不同颜色的按钮样式</title>
      <link href="/2018/09/10/%E4%BD%BF%E7%94%A8SCSS%E7%9A%84each%E5%92%8C%E6%95%B0%E7%BB%84%E6%9D%A5%E5%BF%AB%E9%80%9F%E8%A7%A3%E5%86%B3%E4%B8%8D%E5%90%8C%E9%A2%9C%E8%89%B2%E7%9A%84%E6%8C%89%E9%92%AE%E6%A0%B7%E5%BC%8F/"/>
      <content type="html"><![CDATA[<p>用scss编写 button 样式代码时, 遇到了一个问题，在写好默认样式后，又一股脑的继续写着 <code>.btn-primary</code>的样式，然后又继续些<code>.btn-error</code>的样式，后面还有 <code>.btn-waring</code>、<code>.btn-default</code>，等等，开多了，都是重复的代码，完全与 DRY原则相悖而行，于是就把这些全部干掉。</p><a id="more"></a><p>这是第一次写 文章，对于文章的结构规范，内容都有很大的不足，还请大家见谅。</p><p>用scss有很长一段时间了，但是几乎都是使用 <code>$var</code>，<code>@mixin</code>，<code>@extend</code>和<code>&amp;</code>符，很少用到scss的核心内容，真正的编程思想去定义css。今天有幸遇到了，就来写下我的心得</p><p>以下时自定义的默认，看着有好多的东西，然而这不是今天的重点。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// color.scss</span></span><br><span class="line"><span class="variable">$primary</span>: <span class="number">#2d8cf0</span>;</span><br><span class="line"><span class="variable">$error</span>: <span class="number">#ed4014</span>;</span><br><span class="line"><span class="variable">$warning</span>: <span class="number">#ff9900</span>;</span><br><span class="line"><span class="variable">$default</span>: <span class="number">#FFFFFF</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$content</span>: <span class="number">#515a6e</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// btn.scss</span></span><br><span class="line">.#&#123;<span class="variable">$app</span>&#125; &#123;</span><br><span class="line">  &amp;-btn &#123;</span><br><span class="line">      <span class="attribute">position</span>: relative;</span><br><span class="line">      <span class="attribute">display</span>: inline-block;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">16px</span>;</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">overflow</span>: hidden;</span><br><span class="line">      <span class="attribute">min-width</span>: <span class="number">60px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">32px</span>;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">      <span class="attribute">font-weight</span>: <span class="number">500</span>;</span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">32px</span>;</span><br><span class="line">      <span class="attribute">text-align</span>: center;</span><br><span class="line">      <span class="attribute">text-decoration</span>: none;</span><br><span class="line">      <span class="attribute">text-transform</span>: uppercase;</span><br><span class="line">      <span class="attribute">text-shadow</span>: inset <span class="number">1px</span> <span class="number">1px</span> <span class="number">3px</span> rgba(<span class="number">#000000</span>, <span class="number">0.4</span>);</span><br><span class="line">      <span class="attribute">letter-spacing</span>: <span class="number">0.04em</span>;</span><br><span class="line">      <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">      touch-action: manipulation;</span><br><span class="line">      <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">      zoom: <span class="number">1</span>;</span><br><span class="line">      <span class="attribute">background</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">border</span>: none;</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">2px</span>;</span><br><span class="line">      <span class="attribute">outline</span>: <span class="number">0</span>;</span><br><span class="line">      user-<span class="selector-tag">select</span>: none;</span><br><span class="line">      <span class="attribute">cursor</span>: pointer;</span><br><span class="line">      will-change: box-shadow;</span><br><span class="line">      -webkit-user-drag: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>思路：<br>    使用数组，将颜色变量定义在数组里面，然后使用循环语句来把这些样式给编译出来。</p><p>在这里我最先想到的，就是使用 @for 语法，语法如下（可能会有其他的方法，我没有想到）</p><p>数组</p><hr><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr</span>: (primary, error, warning, default);</span><br></pre></td></tr></table></figure><hr><p>@for</p><hr><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">for</span> <span class="variable">$i</span> from 1 through 3 &#123;</span><br><span class="line">    <span class="selector-class">.item-</span>#&#123;<span class="variable">$i</span>&#125; &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">2em</span> * <span class="variable">$i</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>思路演示：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">for</span> <span class="variable">$i</span> from 1 through <span class="variable">$arr</span>.length &#123;</span><br><span class="line">  <span class="selector-class">.btn-</span>#&#123;<span class="variable">$arr</span><span class="selector-attr">[$i]</span>&#125; &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="variable">$arr</span>[<span class="variable">$i</span>];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error scss/button/button.scss (Line 4: Invalid CSS after <span class="string">"... 1 through <span class="variable">$arr</span>"</span>: expected <span class="string">"&#123;"</span>, was <span class="string">".length &#123;"</span>)</span><br></pre></td></tr></table></figure><p>提示我在 $arr 后面应该是 ‘{’，而不是 ‘.length{’，把它干掉后，肯定还是不对，因为这不是整数，本身就存在着错误。于是就更换一下思路</p><p>下面这个 :chestnut: 这是我最初的思路，大致如下，但是 sass 的语法还没有强大到可以直接对抗逻辑编程语言，因此这种写法是错误的。</p><p>@each</p><hr><p>因此使用遍历 @each 来试一下</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr</span>: (primary, error, warning, default);</span><br><span class="line">@<span class="keyword">each</span> <span class="variable">$color</span> in <span class="variable">$arr</span> &#123;</span><br><span class="line">  <span class="selector-class">.btn-</span>#&#123;<span class="variable">$color</span>&#125; &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$color</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译结果：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.btn-primary</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: primary; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn-error</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: error; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn-warning</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: warning; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn-default</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: default; &#125;</span><br></pre></td></tr></table></figure><p>又出一个问题了，数组中的每一项是字符串,而非变量，用在class 类名上是可以的，但是在 color 属性之上就不对了， color 的属性值中是找不到这四个值得，虽然编译成功了，但还是个错误。</p><p>进一步操作：<br>将 数组编程 键值对的形式</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$map</span>: (primary: <span class="variable">$primary</span>, error: <span class="variable">$error</span>, warning: <span class="variable">$warning</span>, default: <span class="variable">$default</span>);</span><br><span class="line"></span><br><span class="line">@<span class="keyword">each</span> <span class="variable">$colorName</span>, <span class="variable">$color</span> in map &#123;</span><br><span class="line">  <span class="selector-class">.btn-</span>#&#123;<span class="variable">$colorName</span>&#125; &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$color</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译结果：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.btn-primary</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#2d8cf0</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn-error</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ed4014</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn-warning</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ff9900</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn-default</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#FFFFFF</span>; &#125;</span><br></pre></td></tr></table></figure><p>终于对了，但是还是有缺陷，就是当 btn 颜色为 default 的时候，文字颜色就成白色了，这是不允许的，所以要在里面加上 条件判断, 在这里我把它定义在的 <code>@mixin</code> 中。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$map</span>: (primary: <span class="variable">$primary</span>, error: <span class="variable">$error</span>, warning: <span class="variable">$warning</span>, default: <span class="variable">$default</span>);</span><br><span class="line"></span><br><span class="line">@<span class="keyword">mixin</span> judgeBtnColor(<span class="variable">$color</span>) &#123;</span><br><span class="line">  @<span class="keyword">if</span> <span class="variable">$color</span> == <span class="variable">$default</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$content</span>;</span><br><span class="line">  &#125; @<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$color</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">each</span> <span class="variable">$colorName</span>, <span class="variable">$color</span> in map &#123;</span><br><span class="line">  <span class="selector-class">.btn-</span>#&#123;<span class="variable">$colorName</span>&#125; &#123;</span><br><span class="line">    @<span class="keyword">include</span> judgeBtnColor(<span class="variable">$color</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译结果：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.btn-primary</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#2d8cf0</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn-error</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ed4014</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn-warning</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ff9900</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn-default</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#515a6e</span>; &#125;</span><br></pre></td></tr></table></figure><p>问题解决了。</p><hr><p>完整代码</p><hr><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 命名空间标识</span></span><br><span class="line"><span class="variable">$app</span>: bx;</span><br><span class="line"></span><br><span class="line"><span class="comment">// color.scss</span></span><br><span class="line"><span class="variable">$primary</span>: <span class="number">#2d8cf0</span>;</span><br><span class="line"><span class="variable">$error</span>: <span class="number">#ed4014</span>;</span><br><span class="line"><span class="variable">$warning</span>: <span class="number">#ff9900</span>;</span><br><span class="line"><span class="variable">$default</span>: <span class="number">#FFFFFF</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$content</span>: <span class="number">#515a6e</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 映射</span></span><br><span class="line"><span class="variable">$map</span>: (<span class="variable">$primary</span>: primary, <span class="variable">$error</span>: error, <span class="variable">$warning</span>: warning, <span class="variable">$default</span>: default);</span><br><span class="line"></span><br><span class="line">@<span class="keyword">mixin</span> textBtnColor(<span class="variable">$color</span>) &#123;</span><br><span class="line">    @<span class="keyword">if</span> <span class="variable">$color</span> == <span class="variable">$default</span> &#123;</span><br><span class="line">      <span class="attribute">color</span>: <span class="variable">$content</span>;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="variable">$content</span>;</span><br><span class="line">    &#125; @<span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="attribute">color</span>: <span class="variable">$color</span>;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="variable">$color</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">mixin</span> btnColor(<span class="variable">$color</span>) &#123;</span><br><span class="line">  @<span class="keyword">if</span> <span class="variable">$color</span> == <span class="variable">$default</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$content</span>;</span><br><span class="line">  &#125; @<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#FFFFFF</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">$color</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// button</span></span><br><span class="line">.#&#123;<span class="variable">$app</span>&#125; &#123;</span><br><span class="line">  &amp;-btn &#123;</span><br><span class="line">      <span class="attribute">position</span>: relative;</span><br><span class="line">      <span class="attribute">display</span>: inline-block;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">16px</span>;</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">overflow</span>: hidden;</span><br><span class="line">      <span class="attribute">min-width</span>: <span class="number">60px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">32px</span>;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">      <span class="attribute">font-weight</span>: <span class="number">500</span>;</span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">32px</span>;</span><br><span class="line">      <span class="attribute">text-align</span>: center;</span><br><span class="line">      <span class="attribute">text-decoration</span>: none;</span><br><span class="line">      <span class="attribute">text-transform</span>: uppercase;</span><br><span class="line">      <span class="attribute">text-shadow</span>: inset <span class="number">1px</span> <span class="number">1px</span> <span class="number">3px</span> rgba(<span class="number">#000000</span>, <span class="number">0.4</span>);</span><br><span class="line">      <span class="attribute">letter-spacing</span>: <span class="number">0.04em</span>;</span><br><span class="line">      <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">      touch-action: manipulation;</span><br><span class="line">      <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">      zoom: <span class="number">1</span>;</span><br><span class="line">      <span class="attribute">background</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">border</span>: none;</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">2px</span>;</span><br><span class="line">      <span class="attribute">outline</span>: <span class="number">0</span>;</span><br><span class="line">      user-<span class="selector-tag">select</span>: none;</span><br><span class="line">      <span class="attribute">cursor</span>: pointer;</span><br><span class="line">      will-change: box-shadow;</span><br><span class="line">      -webkit-user-drag: none;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      @<span class="keyword">each</span> <span class="variable">$color</span>, <span class="variable">$colorName</span> in <span class="variable">$map</span> &#123;</span><br><span class="line">        &amp;-#&#123;<span class="variable">$colorName</span>&#125; &#123;</span><br><span class="line">          @<span class="keyword">include</span> btnColor(<span class="variable">$color</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &amp;-text &#123;</span><br><span class="line">        @<span class="keyword">each</span> <span class="variable">$color</span>, <span class="variable">$colorName</span> in <span class="variable">$map</span> &#123;</span><br><span class="line">          &amp;-#&#123;<span class="variable">$colorName</span>&#125; &#123;</span><br><span class="line">            @<span class="keyword">include</span> textBtnColor(<span class="variable">$color</span>);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>总结：</p><hr><p>就在这个很简单的 btn 样式上，使用了 scss 变量数组、@each、@if...@else 和 @mixin，数组用 圆括号表示，和css 语法中的 <code>rgba(0,0,0,1)</code> 这样的语法很相似，当然也可以映射，在这里使用 映射即（map）的方式来实现。 其他的语法还是很容易理解的，对于我个人而言就是在 数组这个地方，卡壳了。下面是 <a href="https://sass-lang.com" target="_blank" rel="noopener">scss 的官网</a>，想要了解的小伙伴 可以去了解一下吧！<br>第一次写 文章，对于文章的结构规范，内容都有很大的不足，还请大家见谅。</p>]]></content>
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sass </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
